plugins {
    id 'io.jmix' version '1.2.0'
    id 'java'
}

apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.2.3'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public'
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-ui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.postgresql:postgresql:42.3.5'

    //runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    widgets("io.jmix.ui:jmix-ui-widgets")
    widgets("io.jmix.ui:jmix-charts-widgets")
    implementation("io.jmix.ui:jmix-charts-starter")
    implementation("io.jmix.dashboards:jmix-dashboards-starter")
    implementation("io.jmix.dashboards:jmix-dashboards-ui-starter")
    themes("io.jmix.ui:jmix-ui-themes")
    implementation("io.jmix.ui:jmix-ui-themes")
    implementation("io.jmix.email:jmix-email-ui-starter")
    implementation("io.jmix.email:jmix-email-starter")
}

test {
    useJUnitPlatform()
}

compileWidgets {
    generate "com.company.jmixpm.widgets.CustomWidgetSet"
    includePaths("**/io/jmix/**/widget/**", "**/com/company/jmixpm/widgets/**")
}